<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>GEB LIFE App</title>

    <!-- HTML5 QR CODE LIBRARY -->
    <!-- <script src="../js/html5-qrcode.min.js"></script> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5-qrcode/2.3.4/html5-qrcode.min.js" integrity="sha512-k/KAe4Yff9EUdYI5/IAHlwUswqeipP+Cp5qnrsUjTPCgl51La2/JhyyjNciztD7mWNKLSXci48m7cctATKfLlQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>


    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>

    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Include jsGrid CSS and JS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>

    <!-- CSS -->
    <style>
      .hide {
        display: none;
      }

      main {
        display: flex;
        justify-content: center;
        align-items: center;
      }

      #reader {
            width: 100%; /* Make the scanner container full-width */
            max-width: 400px; /* Limit the maximum width */
            margin: 0 auto; /* Center the scanner horizontally */
            border: 2px solid #007bff; /* Add a border around the scanner */
            padding: 20px; /* Add some padding around the scanner */
            border-radius: 10px; /* Add rounded corners */
            background-color: #f8f9fa; /* Add a light background color */
        }

         /* Style the scanner button */
  #reader button {
    display: block;
    margin: 0 auto; /* Center the button horizontally */
    background-color: #007bff; /* Button background color */
    color: #fff; /* Button text color */
    text-align: center; /* Center the text horizontally */
    border-radius: 20px; /* Add rounded corners to the button */
    cursor: pointer; /* Add a pointer cursor to the button */
  }

    </style>
  </head>

  <body>
    <%- include('./partials/header') %>

    <div class="container">
      <div class="row">
        <div class="col" style="max-width: 100%">
          <div class="table-responsive">
            <br>
            <h3>Inventory Update</h3>
            <br />
            <h5>QR Scan</h5>
            <div style="width: 500px" id="reader"></div>

            <br />
            <h5>Inventory</h5>

            <main>
                <div id="jsGrid" class="col-12 col-lg-6"></div>
            </main>
           

            <div class="modal fade" id="myModal">
              <div class="modal-dialog">
                <div class="modal-content">
                  <!-- Modal Header -->
                  <div class="modal-header">
                    <h4 class="modal-title">Result</h4>
                    <!-- <button type="button" class="close" data-dismiss="modal">&times;</button> -->
                  </div>

                  <!-- Modal body -->
                  <div class="modal-body">
                    <p id="modalResult">Result Here</p>
                  </div>

                  <!-- Modal footer -->
                  <!-- <div class="modal-footer">
                                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                    </div> -->
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <%- include('./partials/footer') %>

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      $(function () {
        $("#jsGrid").jsGrid({
          width: "100%",
        //   height: "900px",

          filtering: true,
          editing: true,
          inserting: true,
          sorting: true,
          paging: true,
          autoload: true,
          pageSize: 15,
          pageButtonCount: 5,

          deleteConfirm: "Do you really want to delete the product?",

          controller: {
            loadData: function (filter) {
              console.log(filter);
              return $.ajax({
                type: "POST",
                url: "/inventory",
                data: filter,
                success: function (response) {
                  console.log("Data from server:", response);
                },
                error: function (error) {
                  console.error(
                    "Error loading items from server:",
                    error.responseJSON.error
                  );

                  // Update the modal's content with the error message
                  $("#modalResult").text(error.responseJSON.error);
                  // Show the modal
                  $("#myModal").modal("show");
                },
              });
            },
            insertItem: function (item) {
              return $.ajax({
                type: "POST",
                url: "/insertItem",
                data: item,
                success: function (response) {
                  console.log("Item inserted successfully.");

                  // Update the modal's content with the server response
                  $("#modalResult").text(response.message);

                  // Show the modal
                  $("#myModal").modal("show");
                  // Reload the data in the grid after inserting
                  $("#jsGrid").jsGrid("loadData");
                },
                error: function (error) {
                  console.error(
                    "Error insert item from client:",
                    error.responseJSON.error
                  );

                  // Update the modal's content with the error message
                  $("#modalResult").text(error.responseJSON.error);
                  // Show the modal
                  $("#myModal").modal("show");
                },
              });
            },
            updateItem: function (item) {
              return $.ajax({
                type: "POST",
                url: "/updateItem",
                data: item,
                success: function (response) {
                  console.log("Item updated successfully.");

                  // Update the modal's content with the server response
                  $("#modalResult").text(response.message);

                  // Show the modal
                  $("#myModal").modal("show");
                  // Reload the data in the grid after updating
                  $("#jsGrid").jsGrid("loadData");
                },
                error: function (error) {
                  console.error(
                    "Error updating item on server:",
                    error.responseJSON.error
                  );

                  // Update the modal's content with the error message
                  $("#modalResult").text(error.responseJSON.error);
                  // Show the modal
                  $("#myModal").modal("show");
                },
              });
            },
            deleteItem: function (item) {
              return $.ajax({
                type: "POST",
                url: "/deleteItem",
                data: item,
                success: function (response) {
                  console.log("Item deleted successfully.");

                  // Update the modal's content with the server response
                  $("#modalResult").text(response.message);

                  // Show the modal
                  $("#myModal").modal("show");

                  // Reload the data in the grid after deleting
                  $("#jsGrid").jsGrid("loadData");
                },
                error: function (error) {
                  console.error(
                    "Error deleting item from server:",
                    error.responseJSON.error
                  );

                  // Update the modal's content with the error message
                  $("#modalResult").text(error.responseJSON.error);
                  // Show the modal
                  $("#myModal").modal("show");
                },
              });
            },
          },

          inserting: true,

          fields: [
            { name: "id", type: "hidden", css: "hide" },
            {
              name: "name",
              title: "Name",
              type: "text",
              width: 150,
              validate: "required",
            },
            {
              name: "category",
              title: "Category",
              type: "text",
              width: 150,
              validate: "required",
            },
            {
              name: "color",
              title: "Color",
              type: "text",
              width: 150,
              validate: "required",
            },
            {
              name: "size",
              title: "Size",
              type: "text",
              width: 150,
              validate: "required",
            },
            {
              name: "total_quantity",
              title: "Total Quantity",
              type: "text",
              width: 150,
              validate: function (value) {
                if (value > 0) {
                  return true;
                }
              },
            },
            {
              name: "available_quantity",
              title: "Available Quantity",
              type: "text",
              width: 150,
              validate: function (value) {
                if (value > 0) {
                  return true;
                }
              },
            },
            { type: "control" },
          ],
        });

        function onScanSuccess(result) {
            console.log("Result on success")
          console.log(result)
          const obj = JSON.parse(result);
          console.log("Object on success")
          console.log(obj);

          // Send the scanned data to the server
          $.ajax({
            type: "POST",
            url: "/validateAndInsert",
            data: obj, // Send the scanned data to the server
            success: function (response) {
              console.log("Scanned data sent to server:", response);

              // Update the modal's content with the server response
              $("#modalResult").text(response.message);

              // Show the modal
              $("#myModal").modal("show");

              // Reload the data in the grid after inserting/updating
              $("#jsGrid").jsGrid("loadData");

            //   html5QrcodeScanner.clear();
            // // Clears scanning instance
            // document.getElementById('jsGrid').remove();
            },
            error: function (error) {
              console.error(
                "Error sending scanned data to server:",
                error.responseJSON.error
              );

              // Update the modal's content with the error message
              $("#modalResult").text(error.responseJSON.error);
              // Show the modal
              $("#myModal").modal("show");
            },
          });
        }
        function onScanError(errorMessage) {
          //handle scan error
          console.log(errorMessage);
          // Update the modal's content with the error message
        //   $("#modalResult").text(errorMessage);
        //   // Show the modal
        //   $("#myModal").modal("show");
        }
        // var html5QrcodeScanner = new Html5QrcodeScanner("reader", {
        //   fps: 10,
        //   qrbox: 250,
        // });

        const html5QrcodeScanner = new Html5QrcodeScanner('reader', { 
        // Scanner will be initialized in DOM inside element with id of 'reader'
        qrbox: {
            width: 250,
            height: 250,
        },  // Sets dimensions of scanning box (set relative to reader element width)
        fps: 20, // Frames per second to attempt a scan
    });

        html5QrcodeScanner.render(onScanSuccess, onScanError);
      });
    </script>
  </body>
</html>
