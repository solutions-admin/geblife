<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title> Geb Life Management Portal</title>
    <link rel="icon" type="image/x-icon" href="./images/geb_logo.jpg">

     <!-- Include CSS and external libraries -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css">
    <link href="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/sticky-header/bootstrap-table-sticky-header.css" rel="stylesheet">

    

 


  <!-- Include your custom CSS -->
    <style>
      .hide {
        display: none;
      }

     

      .chartBox {
        display: flex;
        justify-content: center;
        text-align: center;
      }

      .chart-container {
        position: relative;
        width: 40vw;
        min-width: 10vw;
        margin-left: 10px;
        margin-right: 20px;
      }

      #reader {
            width: 100%; /* Make the scanner container full-width */
            max-width: 400px; /* Limit the maximum width */
            margin: 0 auto; /* Center the scanner horizontally */
            border: 2px solid #007bff; /* Add a border around the scanner */
            padding: 20px; /* Add some padding around the scanner */
            border-radius: 10px; /* Add rounded corners */
            background-color: #f8f9fa; /* Add a light background color */
        }

         /* Style the scanner button */
  #reader button {
    display: block;
    margin: 0 auto; /* Center the button horizontally */
    background-color: #007bff; /* Button background color */
    color: #fff; /* Button text color */
    text-align: center; /* Center the text horizontally */
    border-radius: 20px; /* Add rounded corners to the button */
    cursor: pointer; /* Add a pointer cursor to the button */
  }

  table th{
    background-color: #35b68a !important;
    padding: 10px !important;
    
  }

 th, thead {
    border-color: inherit;
    border-style: hidden;
    border-width: 0;
}

tbody, td, tfoot, tr {
    border-color: inherit;
    border-style: inherit;
    border-width: 0;
    text-align: center;
}

.green{
    color: #217a5c !important;
}

/* Center the image using Flexbox */
#fullscreenGif {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                z-index: 11111;
                width: 100%;
                height: 100%;
                display: none;
            }

  

    </style>
  </head>

  <body>
  
    <%- include('./partials/header') %>

    <div class="container">

        <h3> <img width="67" height="67" src="https://img.icons8.com/external-smashingstocks-thin-outline-smashing-stocks/67/external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks.png" alt="external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks"/> Inventory <b><span class="green">Summary</soan></b> </h3>
          
          <hr class="solid" style="margin-bottom: 30px;">

          <h4 style="margin-top: 15px !important; margin-bottom: 5px !important; text-align: center !important;"> Summarized Data </h4>

          <div id="wdr-component"></div>




          <h4 style="margin-top: 35px !important; margin-bottom: 5px !important; text-align: center !important;"> Visualization </h4>

          <div class="chartBox">
        <!-- format so that the charts show up side by side -->
        <div class="chart-container">
          <canvas id="c1"></canvas>
        </div>
      
         
    </div>

   

   


    <h3> <img width="67" height="67" src="https://img.icons8.com/external-smashingstocks-thin-outline-smashing-stocks/67/external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks.png" alt="external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks"/> Inventory <b><span class="green">Table</soan></b> </h3>

      <hr class="solid" style="margin-bottom: 30px;">

        <table
          id="inventoryTable"
          data-toggle="table"
          data-filter-control="true"
          data-sortable="true"
          data-sticky-header="true"
          data-show-toggle="true"
          data-show-columns-search="true"
          data-search="true"
          data-show-columns="true"
          data-pagination="true"
          data-show-pagination-switch="true"
          data-pagination-pre-text="Previous"
          data-pagination-next-text="Next"
          data-pagination-h-align="left"
          data-pagination-detail-h-align="right"
          data-strict-search="false"
          data-page-size="50"
          data-advanced-search="true"
          data-id-table="advancedTable"
          data-striped="true"
          data-show-print="true"
          data-show-export="true"
          data-click-to-select="true"
        >
         
        </table>

    </div>

    <img id="fullscreenGif" src="./images/loading.gif"/>

    <%- include('./partials/footer') %>

 
    


 <!-- webdatarocks libraries -->
<link href="https://cdn.webdatarocks.com/latest/webdatarocks.min.css" rel="stylesheet"/>
<script src="https://cdn.webdatarocks.com/latest/webdatarocks.toolbar.min.js"></script>
<script src="https://cdn.webdatarocks.com/latest/webdatarocks.js"></script>

  
        <script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.10.21/tableExport.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.10.21/libs/jsPDF/jspdf.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.10.21/libs/jsPDF-AutoTable/jspdf.plugin.autotable.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/export/bootstrap-table-export.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/print/bootstrap-table-print.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/sticky-header/bootstrap-table-sticky-header.min.js"></script>


  <script src="https://raw.githubusercontent.com/techslides/FastPivot/master/fastpivot.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.0/dist/chart.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

    <script>

$(document).ready(function () {


    function fastpivot(a) {
            "use strict";
            var t = {};
            if ("string" != typeof a && a.length > 0) {
              var l = Object.keys(a[0]),
                n = {};
              l.forEach(function (a) {
                (n[a] = {}),
                  (n[a]._labels = []),
                  (n[a]._labelsdata = []),
                  (n[a]._data = {});
              }),
                a.forEach(function (a, t) {
                  l.forEach(function (t) {
                    var l = a[t];
                    (n[t]._data[l] = (n[t]._data[l] || 0) + 1),
                      (n[t]._labels[l] = null);
                  });
                }),
                l.forEach(function (a) {
                  for (var t in n[a]._data)
                    n[a]._labelsdata.push(n[a]._data[t]);
                  n[a]._labels = Object.keys(n[a]._labels);
                }),
                (t = n);
            }
            return t;
          }

          var pivot;
          var myChart;
          var chartData = {
            labels: [],
            datasets: [],
          };

   

      function getColors() {
        // Define your color generation logic here or use predefined colors
        // For example, you can return an array of random colors
        const rgbArray = [];
        for (var i = 0; i < 200; i++) {
          rgbArray.push(
            "rgb(" +
              Math.floor(Math.random() * 256) +
              ", " +
              Math.floor(Math.random() * 256) +
              ", " +
              Math.floor(Math.random() * 256) +
              ")"
          );
        }
        return rgbArray;
      }


        
      // $("#fullscreenGif").css("display", "block");
      // $("html").css("overflow","hidden !important");

    $.post("/viewInventory",function (data, status) {
      
                createTable(data);

                var pivot = new WebDataRocks({
                  container: "#wdr-component",
                  toolbar: true,
                  report: {
                    dataSource: {
                      data: data,
                    },
                    slice: {
                        rows: [
                          {
                            uniqueName: "Name", // Replace with the field name you want as rows
                          },
                         
                        ],
                        measures: [
                              {
                                uniqueName: "Total Quantity",
                                aggregation: "sum",
                              },
                        ],

                      },
                  },
                  
                  reportcomplete: function () {
                    // When the WebDataRocks report is complete, create or update the Chart.js chart
                    createOrUpdateChart();
                  }
                });


                 // Function to create or update the Chart.js chart
                  function createOrUpdateChart() {
                    if (myChart) {
                      // If the chart already exists, destroy it to recreate it with new data
                      myChart.destroy();
                    }

                    console.log(pivot)
                    // Get the pivot table data from WebDataRocks
                    var pivotData = pivot.getReport("json");
                    console.log("pivotData")
                    console.log(pivotData)

                    var datasetsLength = pivotData.slice.measures

                    console.log(datasetsLength.length)

                    // Prepare chartData based on the pivot table data
                    chartData.labels = pivotData.dataSource.data.map((item) => item[pivotData.slice.rows[0].uniqueName]); // Update with your desired labels
                     // Clear existing datasets
                      chartData.datasets = [];

                    // Iterate through measures and create datasets
                    pivotData.slice.measures.forEach(function (measure) {
                      chartData.datasets.push({
                        label: measure.uniqueName, // Dataset label is the uniqueName of the measure
                        data: pivotData.dataSource.data.map((item) => item[measure.uniqueName]), // Data field based on measure
                        backgroundColor: getColors(), // Use your color generation logic or define custom colors
                        borderWidth: 1,
                      });
                    });
                



                
                

                    // Create a new Chart.js chart
                    var ctx = document.getElementById("c1").getContext("2d");
                    myChart = new Chart(ctx, {
                      type: "bar", // Update with your desired chart type
                      data: chartData,
                      options: {
                        // Customize chart options as needed
                      },
                    });
                  }


                  // $("#fullscreenGif").css("display", "none");
              


        }
    );

    function createTable(data) {
        
     
        
     

            console.log(data);
             var my_columns = [];

         

          $.each(data[0], function (key, value) {
            var my_item = {};
            my_item.field = key;
            my_item.title = key;
            my_item.sortable = "true";
            my_item.filterControl = "input";
            my_item.filterControlPlaceholder = "Search";
            my_columns.push(my_item);
          });

         

          //console.log(my_columns)

          $("#inventoryTable").bootstrapTable("destroy");
          $("#inventoryTable").bootstrapTable({
            columns: my_columns,
            data: data,
            showColumns: true,
            search: true,
          });

      }

    });
    
    </script>
  </body>
</html>
