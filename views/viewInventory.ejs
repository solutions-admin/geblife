<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>GEB LIFE App</title>

     <!-- Include CSS and external libraries -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css">
    <link href="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/sticky-header/bootstrap-table-sticky-header.css" rel="stylesheet">

    

 


  <!-- Include your custom CSS -->
    <style>
      .hide {
        display: none;
      }

     

      .chartBox {
        display: flex;
        justify-content: center;
        text-align: center;
      }

      .chart-container {
        position: relative;
        width: 40vw;
        min-width: 10vw;
        margin-left: 10px;
        margin-right: 20px;
      }

      #reader {
            width: 100%; /* Make the scanner container full-width */
            max-width: 400px; /* Limit the maximum width */
            margin: 0 auto; /* Center the scanner horizontally */
            border: 2px solid #007bff; /* Add a border around the scanner */
            padding: 20px; /* Add some padding around the scanner */
            border-radius: 10px; /* Add rounded corners */
            background-color: #f8f9fa; /* Add a light background color */
        }

         /* Style the scanner button */
  #reader button {
    display: block;
    margin: 0 auto; /* Center the button horizontally */
    background-color: #007bff; /* Button background color */
    color: #fff; /* Button text color */
    text-align: center; /* Center the text horizontally */
    border-radius: 20px; /* Add rounded corners to the button */
    cursor: pointer; /* Add a pointer cursor to the button */
  }

  table th{
    background-color: #35b68a !important;
    padding: 10px !important;
    
  }

 th, thead {
    border-color: inherit;
    border-style: hidden;
    border-width: 0;
}

tbody, td, tfoot, tr {
    border-color: inherit;
    border-style: inherit;
    border-width: 0;
    text-align: center;
}

.green{
    color: #217a5c !important;
}

  

    </style>
  </head>

  <body>
  
    <%- include('./partials/header') %>

    <div class="container">

        <h3> <img width="67" height="67" src="https://img.icons8.com/external-smashingstocks-thin-outline-smashing-stocks/67/external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks.png" alt="external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks"/> Inventory <b><span class="green">Summary</soan></b> </h3>
    <div class="chartBox">
        <!-- format so that the charts show up side by side -->
        <div class="chart-container">
          <canvas id="c"></canvas>
        </div>
        <div class="chart-container">
            <canvas id="c2"></canvas>
          </div>
         
    </div>

   

    <div class="chartBox">
        <div class="chart-container">
            <canvas id="c3"></canvas>
          </div>
        <div class="chart-container">
            <canvas id="c4"></canvas>
          </div>
    </div>


    <h3> <img width="67" height="67" src="https://img.icons8.com/external-smashingstocks-thin-outline-smashing-stocks/67/external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks.png" alt="external-inventory-logistic-services-smashingstocks-thin-outline-smashing-stocks"/> Inventory <b><span class="green">Table</soan></b> </h3>

        <table
          id="inventoryTable"
          data-toggle="table"
          data-filter-control="true"
          data-sortable="true"
          data-sticky-header="true"
          data-show-toggle="true"
          data-show-columns-search="true"
          data-search="true"
          data-show-columns="true"
          data-pagination="true"
          data-show-pagination-switch="true"
          data-pagination-pre-text="Previous"
          data-pagination-next-text="Next"
          data-pagination-h-align="left"
          data-pagination-detail-h-align="right"
          data-strict-search="false"
          data-page-size="50"
          data-advanced-search="true"
          data-id-table="advancedTable"
          data-striped="true"
          data-show-print="true"
          data-show-export="true"
          data-click-to-select="true"
        >
         
        </table>

    </div>


    <%- include('./partials/footer') %>

 
    



  
        <script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.10.21/tableExport.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.10.21/libs/jsPDF/jspdf.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.10.21/libs/jsPDF-AutoTable/jspdf.plugin.autotable.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/export/bootstrap-table-export.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/print/bootstrap-table-print.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/extensions/sticky-header/bootstrap-table-sticky-header.min.js"></script>


  <script src="https://raw.githubusercontent.com/techslides/FastPivot/master/fastpivot.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.0/dist/chart.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

    <script>

$(document).ready(function () {

    function fastpivot(a) {
            "use strict";
            var t = {};
            if ("string" != typeof a && a.length > 0) {
              var l = Object.keys(a[0]),
                n = {};
              l.forEach(function (a) {
                (n[a] = {}),
                  (n[a]._labels = []),
                  (n[a]._labelsdata = []),
                  (n[a]._data = {});
              }),
                a.forEach(function (a, t) {
                  l.forEach(function (t) {
                    var l = a[t];
                    (n[t]._data[l] = (n[t]._data[l] || 0) + 1),
                      (n[t]._labels[l] = null);
                  });
                }),
                l.forEach(function (a) {
                  for (var t in n[a]._data)
                    n[a]._labelsdata.push(n[a]._data[t]);
                  n[a]._labels = Object.keys(n[a]._labels);
                }),
                (t = n);
            }
            return t;
          }

        

    $.post("/viewInventory",function (data, status) {
      
                createTable(data);
        }
    );

    function createTable(data) {
        
        function rerenderChart() {
              myChart.destroy();
            }

            let chartStatus = Chart.getChart("c"); // <canvas> id
            let chartStatus2 = Chart.getChart("c2"); // <canvas> id
            let chartStatus3 = Chart.getChart("c3");
            let chartStatus4 = Chart.getChart("c4");
            // if (chartStatus != undefined) {
            //   rerenderChart();
            // }
     

            console.log(data);
             var my_columns = [];

        //   if(data.length > 0){
        //     var my_item1 = {};
        //     my_item1.field = "ACTIONS";
        //     my_item1.title =  "ACTIONS";
        //     my_item1.formatter = actionsFormatter
        //     my_columns.push(my_item1);
         
        //   }
         

          $.each(data[0], function (key, value) {
            var my_item = {};
            my_item.field = key;
            my_item.title = key;
            my_item.sortable = "true";
            my_item.filterControl = "input";
            my_item.filterControlPlaceholder = "Search";
            my_columns.push(my_item);
          });

         

          //console.log(my_columns)

          $("#inventoryTable").bootstrapTable("destroy");
          $("#inventoryTable").bootstrapTable({
            columns: my_columns,
            data: data,
            showColumns: true,
            search: true,
          });

          const plugin = {
                id: "customCanvasBackgroundColor",
                beforeDraw: (chart, args, options) => {
                  const { ctx } = chart;
                  ctx.save();
                  ctx.globalCompositeOperation = "destination-over";
                  ctx.fillStyle = options.color || "#99ffff";
                  ctx.fillRect(0, 0, chart.width, chart.height);
                  ctx.restore();
                },
              };
              var mydata = data;
              var ctx = document.getElementById("c").getContext("2d");
              var ctx2 = document.getElementById("c2").getContext("2d");
              var ctx3 = document.getElementById("c3").getContext("2d");
              var ctx4 = document.getElementById("c4").getContext("2d");

              
            
              //var json = JSON.parse(data.tb1);
              //console.log("data.tb1");
              //console.log(data.tb1);
              var data = fastpivot(data);

              var rgbArray = [];

              function getColors() {
                // do a for loop to fill the rgbArray array with 200 random rgb colors, each index formatted as "rgb( number, number, number, 0.5)" the 0.5 is to keep the colors soft for UX
                for (var i = 0; i < 200; i++) {
                  rgbArray.push(
                    "rgb(" +
                      Math.floor(Math.random() * 256) +
                      ", " +
                      Math.floor(Math.random() * 255) +
                      ", " +
                      Math.floor(Math.random() * 255) +
                      ", 0.5 " +
                      ")"
                  );
                }
                // //console.log("colors array: " + rgbArray);
                return rgbArray;
              }

              getColors(); //call getColors() when page loads

              const chartData = {
                labels: data["Name"]._labels,
                datasets: [
                  {
                    label: "Name",
                    data: data["Name"]._labelsdata,
                    backgroundColor: rgbArray, // use the rgbArray array crated on line 632
                    borderWidth: 1,
                  },
                ],
              };

              const chartData2 = {
                labels: data["Category"]._labels,
                datasets: [
                  {
                    label: "Category",
                    data: data["Category"]._labelsdata,
                    backgroundColor: rgbArray, // use the rgbArray array crated on line 632
                    borderWidth: 1,
                  },
                ],
              };

              const chartData3 = {
                labels: data["Color"]._labels,
                datasets: [
                  {
                    label: "Color",
                    data: data["Color"]._labelsdata,
                    backgroundColor: rgbArray, // use the rgbArray array crated on line 632
                    borderWidth: 1,
                  },
                ],
              };

              const chartData4 = {
                labels: data["Size"]._labels,
                datasets: [
                  {
                    label: "Size",
                    data: data["Size"]._labelsdata,
                    backgroundColor: rgbArray, // use the rgbArray array crated on line 632
                    borderWidth: 1,
                  },
                ],
              };

             
              const config = {
                type: "bar", //horizontalBar, bar, pie, line, doughnut, radar, polarArea
                data: chartData,
                plugins: [ChartDataLabels, plugin],
                options: {
                  responsive: true,
                  // maintainAspectRatio: false,
                  plugins: {
                    customCanvasBackgroundColor: {
                      color: "white",
                    },
                    datalabels: {
                      labels: {
                        value: {
                          color: "black",
                          // font: {
                          //       size: 50
                          // }
                        },
                      },
                    },
                    title: {
                      display: true,
                      text: "Count by Name",
                    },
                    legend: {
                      display: true,
                      position: "bottom",
                    },
                  },
                },
                layout: {
                  // padding:{
                  //   left:50,
                  //   right:0,
                  //   bottom:0,
                  //   top: 0
                  // },
                  tooltips: {
                    enable: true,
                  },
                  scales: {
                    x: {
                      stacked: true,
                    },
                    y: {
                      beginAtZero: true,
                      stacked: true,
                    },
                  },
                },
              };

              const config2 = {
                type: "bar", //horizontalBar, bar, pie, line, doughnut, radar, polarArea
                data: chartData2,
                plugins: [ChartDataLabels, plugin],
                options: {
                  responsive: true,
                  // maintainAspectRatio: false,
                  plugins: {
                    customCanvasBackgroundColor: {
                      color: "white",
                    },
                    datalabels: {
                      labels: {
                        value: {
                          color: "black",
                          // font: {
                          //       size: 50
                          // }
                        },
                      },
                    },
                    title: {
                      display: true,
                      text: "Count by Cateory",
                    },
                    legend: {
                      display: true,
                      position: "bottom",
                    },
                  },
                },
                layout: {
                  // padding:{
                  //   left:50,
                  //   right:0,
                  //   bottom:0,
                  //   top: 0
                  // },
                  tooltips: {
                    enable: true,
                  },
                  scales: {
                    x: {
                      stacked: true,
                    },
                    y: {
                      beginAtZero: true,
                      stacked: true,
                    },
                  },
                },
              };

              const config3 = {
                type: "bar", //horizontalBar, bar, pie, line, doughnut, radar, polarArea
                data: chartData3,
                plugins: [ChartDataLabels, plugin],
                options: {
                  responsive: true,
                  // maintainAspectRatio: false,
                  plugins: {
                    customCanvasBackgroundColor: {
                      color: "white",
                    },
                    datalabels: {
                      labels: {
                        value: {
                          color: "black",
                          // font: {
                          //       size: 50
                          // }
                        },
                      },
                    },
                    title: {
                      display: true,
                      text: "Count by Color",
                    },
                    legend: {
                      display: true,
                      position: "bottom",
                    },
                  },
                },
                layout: {
                  // padding:{
                  //   left:50,
                  //   right:0,
                  //   bottom:0,
                  //   top: 0
                  // },
                  tooltips: {
                    enable: true,
                  },
                  scales: {
                    x: {
                      stacked: true,
                    },
                    y: {
                      beginAtZero: true,
                      stacked: true,
                    },
                  },
                },
              };


              const config4 = {
                type: "bar", //horizontalBar, bar, pie, line, doughnut, radar, polarArea
                data: chartData4,
                plugins: [ChartDataLabels, plugin],
                options: {
                  responsive: true,
                  // maintainAspectRatio: false,
                  plugins: {
                    customCanvasBackgroundColor: {
                      color: "white",
                    },
                    datalabels: {
                      labels: {
                        value: {
                          color: "black",
                          // font: {
                          //       size: 50
                          // }
                        },
                      },
                    },
                    title: {
                      display: true,
                      text: "Count by Size",
                    },
                    legend: {
                      display: true,
                      position: "bottom",
                    },
                  },
                },
                layout: {
                  // padding:{
                  //   left:50,
                  //   right:0,
                  //   bottom:0,
                  //   top: 0
                  // },
                  tooltips: {
                    enable: true,
                  },
                  scales: {
                    x: {
                      stacked: true,
                    },
                    y: {
                      beginAtZero: true,
                      stacked: true,
                    },
                  },
                },
              };

              Chart.register(ChartDataLabels);
              //myPieChart.destroy()

              //-- End of chart destroy
              myChart = new Chart(ctx, config);
              myChart2 = new Chart(ctx2, config2);
              myChart3 = new Chart(ctx3, config3);
              myChart4 = new Chart(ctx4, config4);
          
      }

    });
    
    </script>
  </body>
</html>
